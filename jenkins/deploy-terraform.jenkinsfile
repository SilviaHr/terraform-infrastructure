pipeline {
    parameters {
            booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

   agent  any
    stages {
            stage('checkout') {
                steps {
                     script{
                         git credentialsId: 'GIT', branch: ${GIT_REF}, url: 'https://github.com/SilviaHr/terraform-infrastructure.git'
                     }
                }
            }

        stage('Plan') {
            steps {
                sh """
                   pwd;cd terraform-infrastructure/${params.TF_MODULE} ; terraform init
                   pwd;cd terraform-infrastructure/${params.TF_MODULE}; terraform plan -out tfplan
                   pwd;cd terraform-infrastructure/${params.TF_MODULE} ; terraform show -no-color tfplan > tfplan.txt
                   """
            }
        }

//           steps {
//               script {
//                     def plan = readFile 'terraform-infrastructure/${TF_MODULE}/tfplan.txt'
//                     input message: "Do you want to apply the plan?",
//                     parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
//               }
//           }
//       }
//
//         stage('Apply') {
//             steps {
//                 sh "pwd;cd terraform-infrastructure/${TF_MODULE} ; terraform apply --auto-approve -input=false tfplan"
//             }
//         }
//      }

  }